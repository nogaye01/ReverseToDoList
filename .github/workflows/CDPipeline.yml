name: CI/CD Automation

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      -dev
  

jobs:
  # Job to build and test (for both dev and main branches)
  build_and_test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js for frontend and backend
      uses: actions/setup-node@v3
      with:
        node-version: '18'  

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm install

    - name: Run unit tests for frontend
      run: |
        cd frontend
        npm test

    - name: Run unit tests for backend
      run: |
        cd backend
        npm test
        
    - name: Merge dev to main (if tests pass)
      if: success()
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git checkout main
        git merge dev
        git push origin main

  # Job to build, test and deploy for the main branch
  build_and_deploy_main:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js for frontend and backend
      uses: actions/setup-node@v3
      with:
        node-version: '18'  

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Install backend dependencies
      run: |
        cd backend
        npm install

    - name: Run unit tests for frontend
      run: |
        cd frontend
        npm test

    - name: Run unit tests for backend
      run: |
        cd backend
        npm test

    - name: Run E2E tests
      run: |
        cd e2e-tests
        npm install
        npm run test

    - name: Build Docker images using docker-compose
      run: |
        docker-compose -f docker-compose.yml build

    - name: Push Docker images to Docker Hub
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker-compose -f docker-compose.yml push
