name: CD Pipeline

on:
  push:
    branches:
      - dev
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup Node.js for frontend and backend
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Install and test Backend
      - name: Install and Test Backend
        working-directory: ./backend
        run: |
          npm install
          npm test

      # 4. Install and test Frontend
      - name: Install and Test Frontend
        working-directory: ./frontend
        run: |
          npm install
          npm test

  merge-to-main:
    name: Merge Dev to Main
    needs: build-and-test
    if: github.ref == 'refs/heads/dev' && success()
    runs-on: ubuntu-latest
    steps:
      # Merge dev into main branch
      - name: Merge Dev into Main
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin
          git checkout main
          git merge dev --no-ff -m "CI/CD: Merging dev into main"
          git push origin main

  e2e-and-deploy:
    name: E2E Test and Deploy
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && success()
    runs-on: ubuntu-latest
    steps:
      #  Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      #  Build and Test with Docker Compose
      - name: Build and Test with Docker Compose
        run: |
          docker-compose up --build -d
          sleep 10 # Wait for services to initialize
          cd e2e-tests
          npm install
          npm test
          docker-compose down

      # Build and Test with Docker Compose
      - name: Build and Test with Docker Compose
        run: |
          docker-compose up --build -d
          sleep 10 # Wait for services to initialize
          npm run e2e # Replace with actual e2e test command
          docker-compose down

      # Build and Push Docker Images
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Images
        run: |
          docker-compose build
          docker-compose push
