name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
      branches:
      - dev

jobs:
  # Job for handling merge into dev branch
  build-and-test-on-dev:
    if: github.ref == 'refs/heads/dev' && github.event.head_commit.message != 'Merge dev into main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Specify the Node.js version

      - name: Install Dependencies - Backend
        working-directory: ./backend
        run: |
          npm install

      - name: Install Dependencies - Frontend
        working-directory: ./frontend
        run: |
          npm install

      - name: Run Unit Tests - Backend
        working-directory: ./backend
        run: |
          npm test

      - name: Run Unit Tests - Frontend
        working-directory: ./frontend
        run: |
          npm test

      - name: Merge dev into main (if all tests pass)
        if: success()  # Only if tests pass
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin
          git checkout main
          git merge dev --no-ff -m "CI/CD: Merging dev into main"
          git push origin main

  # Job for handling merge into main branch
  build-test-and-deploy-on-main:
    if: github.ref == 'refs/heads/main'
    needs: build-and-test-on-dev  # Ensures this job runs after build-and-test-on-dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies - Backend
        working-directory: ./backend
        run: |
          npm install

      - name: Install Dependencies - Frontend
        working-directory: ./frontend
        run: |
          npm install

      - name: Run Unit Tests - Backend
        working-directory: ./backend
        run: |
          npm test

      - name: Run Unit Tests - Frontend
        working-directory: ./frontend
        run: |
          npm test

      - name: Run E2E Tests
        working-directory: ./e2e-tests
        run: |
          npm install
          npm test

      - name: Build Docker Images
        run: |
          docker-compose up --build -d

      - name: Push Docker Images to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Images
        run: |
          docker-compose push

      - name: Clean up Docker
        run: |
          docker-compose down
